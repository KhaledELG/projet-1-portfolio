stages:
  - semantic_release
  - pages
  - build
  - test2

semantic_release:
  stage: semantic_release
  image: node:18.18.2-bullseye
  rules:
    - if: $CI_COMMIT_REF_NAME == 'main'
  variables:
    GIT_CREDENTIALS: "${PROJECT_ACCESS_USER}:${PROJECT_ACCESS_TOKEN}"
  before_script:
    - npm install -g semantic-release @semantic-release/gitlab@v12.0.3 @semantic-release/changelog conventional-changelog-conventionalcommits @semantic-release/commit-analyzer @semantic-release/git
  script:
    - |
      echo "===== GitLab CI/CD | Semantic release ====="
      echo "[INFO] Project name: ${CI_PROJECT_NAME} -- Branch: ${CI_COMMIT_BRANCH} -- Tag: ${CI_COMMIT_TAG}"
      echo "[INFO] Running semantic-release..."

    - semantic-release
    - |
      IMAGE_TAG=$(curl -skL -H "Authorization: Bearer ${GL_TOKEN}" -X GET "https://gitlab.com/kelg/linkedin/projet-1/portfolio/-/blob/main/CHANGELOG.md?ref_type=heads"  | grep "Release " | awk -F 'Release ' '{print $2}' | awk -F '</a>' '{print $1}')
      echo "IMAGE_TAG=$IMAGE_TAG" > build.env
  artifacts:
    reports:
      dotenv: build.env

pages:
  stage: pages
  image: 
    name: node:15.12-alpine3.13
  rules:
    - if: $CI_COMMIT_REF_NAME == 'develop'
  script:
    - |
      echo "===== GitLab CI/CD | Pages ====="
      echo "[INFO] Project name: ${CI_PROJECT_NAME} -- Branch: ${CI_COMMIT_BRANCH} -- Tag: ${CI_COMMIT_TAG}"
      echo "[INFO] Building the website..."

    - cd website
    - npm install --force
    - npm run build
    - mv ./build ../public
    - |
      echo "[INFO] Website build complete!"
      echo "[INFO] Page available here: https://portfolio-kelg-linkedin-projet-1-b4308f23eeb718e75fc393a8db4bff.gitlab.io/"
  artifacts:
    paths:
    - public

npm:build:
  stage: build
  image: 
    name: node:15.12-alpine3.13
  rules:
    - if: $CI_COMMIT_REF_NAME == 'main'
  script:
    - |
      echo "===== GitLab CI/CD | NPM Build ====="
      echo "[INFO] Project name: ${CI_PROJECT_NAME} -- Branch: ${CI_COMMIT_BRANCH} -- Tag: ${CI_COMMIT_TAG}"
      echo "[INFO] Building the website..."

    - cd website
    - npm install --force
    - npm run build
    - mv ./build ../public
    - |
      echo "[INFO] NPM build complete!"
  artifacts:
    paths:
    - public

docker:build:
  stage: build
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: dind
  rules:
    - if: $CI_COMMIT_REF_NAME == 'main'
  needs: ["semantic_release","npm:build"]
  variables:
    DOCKER_HOST: tcp://dind:2375
  before_script:
    - ls -l */*
    - mkdir ~/.docker
    - echo "{\"auths\":{\"${CI_GITHUB_HOST}\":{\"auth\":\"$(printf "%s:%s" "${CI_GITHUB_USER}" "${CI_GITHUB_TOKEN}" | base64 | tr -d '\n')\"}}}" > ~/.docker/config.json
  script:
    - |
      echo "===== GitLab CI/CD | Docker Build ====="
      echo "[INFO] Project name: ${CI_PROJECT_NAME} -- Branch: ${CI_COMMIT_BRANCH} -- Tag: ${CI_COMMIT_TAG}"
      echo "[INFO] Creating Docker image..."

    - docker build -f ./deployment/Dockerfile -t ${CI_GITHUB_HOST}/docausurus:${IMAGE_TAG} .
    - docker push ${CI_GITHUB_HOST}/docausurus:${IMAGE_TAG}
    - |
      echo "[INFO] Docker build and push complete!"
      echo "[INFO] Docker image available: ${CI_GITHUB_HOST}/docausurus:${IMAGE_TAG}"
