stages:
  # - pages
  # - build
  - semantic_release
  - test2

# pages:
#   stage: pages
#   image: 
#     name: node:15.12-alpine3.13
#   rules:
#     - if: $CI_COMMIT_REF_NAME == 'develop'
#   script:
#     - cd website
#     - npm install --force
#     - npm run build
#     - mv ./build ../public
#   artifacts:
#     paths:
#     - public

# npm:build:
#   stage: build
#   image: 
#     name: node:15.12-alpine3.13
#   rules:
#     - if: $CI_COMMIT_REF_NAME == 'main'
#   script:
#     - cd website
#     - npm install --force
#     - npm run build
#     - mv ./build ../public
#   artifacts:
#     paths:
#     - public

# docker:build:
#   stage: build
#   image: docker:24.0.5
#   services:
#     - name: docker:24.0.5-dind
#       alias: dind
#   rules:
#     - if: $CI_COMMIT_REF_NAME == 'main'
#   needs: ["npm:build"]
#   variables:
#     DOCKER_HOST: tcp://dind:2375
#   before_script:
#     - ls -l */*
#     - mkdir ~/.docker
#     - echo "{\"auths\":{\"${CI_GITHUB_HOST}\":{\"auth\":\"$(printf "%s:%s" "${CI_GITHUB_USER}" "${CI_GITHUB_TOKEN}" | base64 | tr -d '\n')\"}}}" > ~/.docker/config.json
#   script:
#     - docker build -f ./deployment/Dockerfile -t ${CI_GITHUB_HOST}/docausurus:1.0.0 .
#     - docker push ${CI_GITHUB_HOST}/docausurus:1.0.0

semantic_release:
  stage: semantic_release
  image: node:18.18.2-bullseye
  variables:
    GIT_CREDENTIALS: "${PROJECT_ACCESS_USER}:${PROJECT_ACCESS_TOKEN}"
  before_script:
    - npm install -g semantic-release @semantic-release/gitlab@v12.0.3 @semantic-release/changelog conventional-changelog-conventionalcommits @semantic-release/commit-analyzer @semantic-release/git
  script:
    - |
      echo "===== GitLab CI/CD | Semantic release ====="
      echo "[INFO] Project name: ${CI_PROJECT_NAME} -- Branch: ${CI_COMMIT_BRANCH} -- Tag: ${CI_COMMIT_TAG}"

    - semantic-release
    - curl google.com

test2:
  stage: test2
  image: alpine:latest
  script:
    - echo ${IMAGE_TAG}